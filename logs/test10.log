[2017-11-22 22:36:58,009] client.Client<Client:57003#MainNode>:OUTPUT: Client ID: 0 
Workload: ["put('movie','star')", " append('movie',' wars')", " get('movie')", " slice('movie', '5:8')", " get('movie')"] 
Timeout: 5
[2017-11-22 22:36:58,540] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica: 0 with history [] initiated
[2017-11-22 22:36:58,540] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica: 1 with history [] initiated
[2017-11-22 22:36:58,540] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Failure for replica 2 :
 {'checkpoint(1)': 'crash()'}
[2017-11-22 22:36:58,540] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica: 2 with history [] initiated
[2017-11-22 22:36:58,556] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Starting test case: test10 - Checkpoint trigger Crash
[2017-11-22 22:36:58,556] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Starting Olympus.
[2017-11-22 22:36:58,556] client.Client<Client:57003#MainNode>:OUTPUT: 
Starting client 0
[2017-11-22 22:36:58,556] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Starting replica 0
[2017-11-22 22:36:58,556] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Starting replica 1
[2017-11-22 22:36:58,556] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Starting replica 2
[2017-11-22 22:36:58,556] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent get_configuration to Olympus.
[2017-11-22 22:36:58,556] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send replicas and configuration information for config 0 to client <Client:57003#MainNode>
[2017-11-22 22:36:58,556] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received configuration 0 from Olympus.
[2017-11-22 22:36:58,556] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : configuration response from Olympus is validated.
[2017-11-22 22:36:58,556] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : start sending requests in new configuration 0
[2017-11-22 22:36:58,556] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent check config message with id 0 to Olympus.
[2017-11-22 22:36:58,571] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send check config response 'OK' to client <Client:57003#MainNode>
[2017-11-22 22:36:58,571] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received check config response: OK continue normally.
[2017-11-22 22:36:58,571] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent operation_request (0, 0) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received new operation request (0, 0) for operation: put('movie','star')
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : handling new request from <Client:57003#MainNode>
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : applied operation and result returned.
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : create order statement at slot 0
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed order statement and added order proof to history
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : obtained result and signed order statement for request (0, 0)
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result statement for request (0, 0) at shuttle.
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent shuttle (0, 0) to  <Replica:a6001#MainNode>
[2017-11-22 22:36:58,571] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received shuttle (0, 0) from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : shuttle message from replica is validated
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signature of replica 0 is validated
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : applied operation and result returned.
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : create order statement at slot 0
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signed order statement and added order proof to history
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and signed result
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and result for request (0, 0) at shuttle.
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent shuttle (0, 0) to <Replica:a6003#MainNode>
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received shuttle (0, 0) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : shuttle message from replica is validated
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 0 is validated
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 1 is validated
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : applied operation and result returned.
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : create order statement at slot 0
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signed order statement and added order proof to history
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and signed result
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and result for request (0, 0) at shuttle.
[2017-11-22 22:36:58,587] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent result_shuttle (0, 0) to replica <Replica:a6001#MainNode>
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent operation_result (0, 0) to client <Client:57003#MainNode>
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received result_shuttle (0, 0) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle for (0, 0) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle from replica is validated
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result_shuttle is validated.
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : cached result proof for request id (0, 0)
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent result_shuttle (0, 0) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,603] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received response for new request (0, 0) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,603] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of request (0, 0) for operation put('movie','star') is verified with 3 replicas acceptance.
[2017-11-22 22:36:58,603] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of new request (0, 0) for operation put('movie','star') is validated, the result is: OK
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received result_shuttle (0, 0) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result shuttle for (0, 0) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result_shuttle is validated.
[2017-11-22 22:36:58,603] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent operation_request (0, 1) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,603] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : cached result proof for request id (0, 0)
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received new operation request (0, 1) for operation:  append('movie',' wars')
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : handling new request from <Client:57003#MainNode>
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : head reaches checkpoint index 2 initiate checkpoint proof at slot 1
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed current state and saved for future comparison
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed current state and appended to checkpoint proof
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent checkpoint proof for index 2 to <Replica:a6001#MainNode>
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : set checkpoint index to 0
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : applied operation and result returned.
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received checkpoint_proof shuttle for checkpoint interval 2 at slot 1 from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : create order statement at slot 1
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed order statement and added order proof to history
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : obtained result and signed order statement for request (0, 1)
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result statement for request (0, 1) at shuttle.
[2017-11-22 22:36:58,618] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent shuttle (0, 1) to  <Replica:a6001#MainNode>
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received shuttle (0, 1) from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : shuttle message from replica is validated
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signature of replica 0 is validated
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : applied operation and result returned.
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : create order statement at slot 1
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signed order statement and added order proof to history
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and signed result
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and result for request (0, 1) at shuttle.
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent shuttle (0, 1) to <Replica:a6003#MainNode>
[2017-11-22 22:36:58,634] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : reach 2 statements in history, append to checkpoint proof shuttle
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent checkpoint proof for index 2 to <Replica:a6003#MainNode>
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received shuttle (0, 1) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : shuttle message from replica is validated
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 0 is validated
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 1 is validated
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : applied operation and result returned.
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : create order statement at slot 1
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signed order statement and added order proof to history
[2017-11-22 22:36:58,650] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and signed result
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and result for request (0, 1) at shuttle.
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent result_shuttle (0, 1) to replica <Replica:a6001#MainNode>
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent operation_result (0, 1) to client <Client:57003#MainNode>
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received result_shuttle (0, 1) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle for (0, 1) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,665] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received response for new request (0, 1) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received checkpoint_proof shuttle for checkpoint interval 2 at slot 1 from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : reach 2 statements in history, append to checkpoint proof shuttle
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle from replica is validated
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result_shuttle is validated.
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : cached result proof for request id (0, 1)
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent result_shuttle (0, 1) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,665] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of request (0, 1) for operation  append('movie',' wars') is verified with 3 replicas acceptance.
[2017-11-22 22:36:58,665] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of new request (0, 1) for operation  append('movie',' wars') is validated, the result is: OK
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : checkpoint proof validated for index 2 with 3 validated checkpoint statements
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : history before index 2 is removed, now start at slot number 2
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent completed checkpoint result to <Replica:a6001#MainNode>
[2017-11-22 22:36:58,665] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent operation_request (0, 2) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,665] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received result_shuttle (0, 1) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received completed checkpoint_proof shuttle for checkpoint interval 2 at slot 1 from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result shuttle for (0, 1) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result_shuttle is validated.
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : cached result proof for request id (0, 1)
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : checkpoint proof validated for index 2 with 3 validated checkpoint statements
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : history before index 2 is removed, now start at slot number 2
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received new operation request (0, 2) for operation:  get('movie')
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : handling new request from <Client:57003#MainNode>
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 1 sent completed checkpoint result to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : applied operation and result returned.
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : create order statement at slot 2
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed order statement and added order proof to history
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result
[2017-11-22 22:36:58,681] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : obtained result and signed order statement for request (0, 2)
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result statement for request (0, 2) at shuttle.
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent shuttle (0, 2) to  <Replica:a6001#MainNode>
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received completed checkpoint_proof shuttle for checkpoint interval 2 at slot 1 from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received shuttle (0, 2) from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : shuttle message from replica is validated
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signature of replica 0 is validated
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : checkpoint proof validated for index 2 with 3 validated checkpoint statements
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : history before index 2 is removed, now start at slot number 2
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : applied operation and result returned.
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : create order statement at slot 2
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signed order statement and added order proof to history
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and signed result
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and result for request (0, 2) at shuttle.
[2017-11-22 22:36:58,696] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent shuttle (0, 2) to <Replica:a6003#MainNode>
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received shuttle (0, 2) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : shuttle message from replica is validated
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 0 is validated
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 1 is validated
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : applied operation and result returned.
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : create order statement at slot 2
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signed order statement and added order proof to history
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and signed result
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and result for request (0, 2) at shuttle.
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent result_shuttle (0, 2) to replica <Replica:a6001#MainNode>
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent operation_result (0, 2) to client <Client:57003#MainNode>
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received result_shuttle (0, 2) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle for (0, 2) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,712] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received response for new request (0, 2) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,712] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle from replica is validated
[2017-11-22 22:36:58,728] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of request (0, 2) for operation  get('movie') is verified with 3 replicas acceptance.
[2017-11-22 22:36:58,728] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of new request (0, 2) for operation  get('movie') is validated, the result is: star wars
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : cached result proof for request id (0, 2)
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent result_shuttle (0, 2) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,728] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent operation_request (0, 3) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received new operation request (0, 3) for operation:  slice('movie', '5:8')
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : handling new request from <Client:57003#MainNode>
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : head reaches checkpoint index 2 initiate checkpoint proof at slot 3
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed current state and saved for future comparison
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed current state and appended to checkpoint proof
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent checkpoint proof for index 2 to <Replica:a6001#MainNode>
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : set checkpoint index to 0
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received checkpoint_proof shuttle for checkpoint interval 2 at slot 3 from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : applied operation and result returned.
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : create order statement at slot 3
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed order statement and added order proof to history
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : obtained result and signed order statement for request (0, 3)
[2017-11-22 22:36:58,728] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result statement for request (0, 3) at shuttle.
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent shuttle (0, 3) to  <Replica:a6001#MainNode>
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received shuttle (0, 3) from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received result_shuttle (0, 2) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result shuttle for (0, 2) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result_shuttle is validated.
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : shuttle message from replica is validated
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : cached result proof for request id (0, 2)
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signature of replica 0 is validated
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : applied operation and result returned.
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : create order statement at slot 3
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signed order statement and added order proof to history
[2017-11-22 22:36:58,743] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and signed result
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and result for request (0, 3) at shuttle.
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent shuttle (0, 3) to <Replica:a6003#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : reach 2 statements in history, append to checkpoint proof shuttle
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent checkpoint proof for index 2 to <Replica:a6003#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received shuttle (0, 3) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : shuttle message from replica is validated
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 0 is validated
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signature of replica 1 is validated
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : applied operation and result returned.
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : create order statement at slot 3
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : signed order statement and added order proof to history
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and signed result
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : hashed and result for request (0, 3) at shuttle.
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent result_shuttle (0, 3) to replica <Replica:a6001#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : sent operation_result (0, 3) to client <Client:57003#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received result_shuttle (0, 3) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : received checkpoint_proof shuttle for checkpoint interval 2 at slot 3 from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle for (0, 3) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,759] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received response for new request (0, 3) from <Replica:a6003#MainNode>
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : failure crash() triggered by checkpoint(1)
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6003#MainNode>:OUTPUT: 
Replica 2 : injecting failure crach() for this replica.
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result shuttle from replica is validated
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : result_shuttle is validated.
[2017-11-22 22:36:58,759] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of request (0, 3) for operation  slice('movie', '5:8') is verified with 3 replicas acceptance.
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : cached result proof for request id (0, 3)
[2017-11-22 22:36:58,759] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of new request (0, 3) for operation  slice('movie', '5:8') is validated, the result is: OK
[2017-11-22 22:36:58,759] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent result_shuttle (0, 3) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,775] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent operation_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received result_shuttle (0, 3) from <Replica:a6001#MainNode>
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result shuttle for (0, 3) contains enough entries, expected 3 and received 3
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : result_shuttle is validated.
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : cached result proof for request id (0, 3)
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received new operation request (0, 4) for operation:  get('movie')
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : handling new request from <Client:57003#MainNode>
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : applied operation and result returned.
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : create order statement at slot 4
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : signed order statement and added order proof to history
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : obtained result and signed order statement for request (0, 4)
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : hashed and signed result statement for request (0, 4) at shuttle.
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent shuttle (0, 4) to  <Replica:a6001#MainNode>
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received shuttle (0, 4) from <Replica:a6002#MainNode>
[2017-11-22 22:36:58,775] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : shuttle message from replica is validated
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signature of replica 0 is validated
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received and successfully decoded signed order statement
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : no conflict in slot number and request id during order proof validation
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : validation for applying request succeeds, start applying request.
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : applied operation and result returned.
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : create order statement at slot 4
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : signed order statement and added order proof to history
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and signed result
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : hashed and result for request (0, 4) at shuttle.
[2017-11-22 22:36:58,790] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent shuttle (0, 4) to <Replica:a6003#MainNode>
[2017-11-22 22:36:59,806] da.sim.Router<OSProcessContainer-1:1>:ERROR: Could not send message due to: TransportException("connection refused by ('127.0.0.1', 22137)",)
[2017-11-22 22:37:03,780] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : timeout waiting for response for request (0, 4) start retransmission phase
[2017-11-22 22:37:03,780] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent retransmission_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received retransmission operation request (0, 4) for operation:  get('movie')
[2017-11-22 22:37:03,780] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent retransmission_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : retransmission request (0, 4) is performed but has not received result shuttle.
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : message from client is validated
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received retransmission operation request (0, 4) for operation:  get('movie')
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : nonhead replica receives retransmission request (0, 4) forward request to head.
[2017-11-22 22:37:03,780] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:37:03,795] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received forward operation request (0, 4) for operation:  get('movie')
[2017-11-22 22:37:03,795] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : retransmission request (0, 4) is performed but has not received result shuttle.
[2017-11-22 22:37:04,796] da.sim.Router<OSProcessContainer-2>:ERROR: Could not send message due to: TransportException("connection refused by ('127.0.0.1', 22137)",)
[2017-11-22 22:37:04,796] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent retransmission_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:37:08,786] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : timeout handling retransmission request (0, 4) send reconfiguration request to Olympus.
[2017-11-22 22:37:08,786] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received reconfig request from replica 1 for configuration 0
[2017-11-22 22:37:08,786] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: start reconfiguration.
[2017-11-22 22:37:08,786] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send wedge requests to all 3 replicas.
[2017-11-22 22:37:08,786] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received wedge request from Olympus, become IMMUTABLE.
[2017-11-22 22:37:08,786] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received wedge request from Olympus, become IMMUTABLE.
[2017-11-22 22:37:08,786] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : sent wedge statement to Olympus.
[2017-11-22 22:37:08,786] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : sent wedge statement to Olympus.
[2017-11-22 22:37:09,801] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : retransmission for request (0, 4) timeout, retry.
[2017-11-22 22:37:09,801] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent retransmission_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:37:09,801] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent retransmission_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:37:09,801] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : message from client is validated
[2017-11-22 22:37:09,801] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received retransmission operation request (0, 4) for operation:  get('movie')
[2017-11-22 22:37:09,801] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received retransmission request in IMMUTABLE state, do nothing.
[2017-11-22 22:37:09,801] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : message from client is validated
[2017-11-22 22:37:09,801] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received retransmission operation request (0, 4) for operation:  get('movie')
[2017-11-22 22:37:09,801] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received retransmission request in IMMUTABLE state, do nothing.
[2017-11-22 22:37:09,817] da.sim.Router<OSProcessContainer-1>:ERROR: Could not send message due to: TransportException("connection refused by ('127.0.0.1', 22137)",)
[2017-11-22 22:37:09,817] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received wedge statement from replica 0
[2017-11-22 22:37:09,817] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received wedge statement from replica 1
[2017-11-22 22:37:09,817] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received wedge statements from all 2 replicas.
[2017-11-22 22:37:09,817] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: start finding a quorum of size 2
[2017-11-22 22:37:09,817] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: wedged stmt validated for replica 0
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: wedged stmt validated for replica 1
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: start forming quorum with replica 0
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: during forming quorum with replica 0 replica 1 is consistent with every replica in current quorum, add it to current quorum
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: found quorum of size 2 the chosen replicas are [0, 1]
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: start looking for longest history.
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: find new max slot 4 at replica 0
[2017-11-22 22:37:09,833] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: number of checkpoint proofs not enough for replica 0 expected at least 2 but only has 1
[2017-11-22 22:37:09,848] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: longest history constructed: [(2, (0, 2), " get('movie')"), (3, (0, 3), " slice('movie', '5:8')"), (4, (0, 4), " get('movie')")]
[2017-11-22 22:37:09,848] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: constructing catch up sequence for replica 0 start from slot 4
[2017-11-22 22:37:09,848] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: catch_up sequence [] constructed for replica 0
[2017-11-22 22:37:09,848] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send catch_up request to replica 0
[2017-11-22 22:37:09,848] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received catch_up request for sequence []
[2017-11-22 22:37:09,848] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : start looking for latest result statement for each client.
[2017-11-22 22:37:09,848] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : find latest result for clients, the requests id of the results are {0: (0, 4)}
[2017-11-22 22:37:09,848] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : current state in caught_up is {'movie': 'war'}
[2017-11-22 22:37:09,848] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : send caught_up message and result state hash to Olympus
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received caught_up message from replica 0
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: handling latest request (0, 4) from replica 0
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: constructing catch up sequence for replica 1 start from slot 4
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: catch_up sequence [] constructed for replica 1
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send catch_up request to replica 1
[2017-11-22 22:37:09,864] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : received catch_up request for sequence []
[2017-11-22 22:37:09,864] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : start looking for latest result statement for each client.
[2017-11-22 22:37:09,864] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : find latest result for clients, the requests id of the results are {0: (0, 4)}
[2017-11-22 22:37:09,864] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : current state in caught_up is {'movie': 'war'}
[2017-11-22 22:37:09,864] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 : send caught_up message and result state hash to Olympus
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received caught_up message from replica 1
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: handling latest request (0, 4) from replica 1
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: caught up message received from all replicas
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: construct result proof for client 0 for latest request (0, 4) for operation  get('movie')
[2017-11-22 22:37:09,864] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: caught_up state hashes match for replicas in the quorum.
[2017-11-22 22:37:09,880] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send get_running_state request to replica 0
[2017-11-22 22:37:09,880] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : received get_running_state request.
[2017-11-22 22:37:09,880] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 : send running_state_message for current state to Olympus.
[2017-11-22 22:37:09,880] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: received running_state_message message from replica 0
[2017-11-22 22:37:09,880] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: all replica in the quorum have state hashes match for running state of replica 0
[2017-11-22 22:37:09,880] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: the correct running state is {'movie': 'war'}
[2017-11-22 22:37:09,880] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: sent reconfig operation_result for latest request (0, 4) for operation  get('movie') to client 0
[2017-11-22 22:37:09,880] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: terminte current replicas
[2017-11-22 22:37:10,822] da.sim.Router<OSProcessContainer-2>:ERROR: Could not send message due to: TransportException("connection refused by ('127.0.0.1', 22137)",)
[2017-11-22 22:37:10,822] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent retransmission_request (0, 4) to <Replica:a6002#MainNode>
[2017-11-22 22:37:10,822] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received response for reconfig request (0, 4) from <Olympus:57002#MainNode>
[2017-11-22 22:37:10,822] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of request (0, 4) for operation  get('movie') is verified with 2 replicas acceptance.
[2017-11-22 22:37:10,822] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : response of reconfig request (0, 4) for operation  get('movie') is validated, the result is: war
[2017-11-22 22:37:10,822] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : retransmission for request (0, 4) finished.
[2017-11-22 22:37:10,822] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent check config message with id 1 to Olympus.
[2017-11-22 22:37:10,900] da.sim.Router<OSProcessContainer-1>:ERROR: Could not send message due to: TransportException("connection refused by ('127.0.0.1', 22137)",)
[2017-11-22 22:37:11,447] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: setting up replica 0 for new configuration.
[2017-11-22 22:37:11,447] replica.Replica<Replica:a6006#MainNode>:OUTPUT: 
Replica: 0 with history [] initiated
[2017-11-22 22:37:11,447] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: setting up replica 1 for new configuration.
[2017-11-22 22:37:11,447] replica.Replica<Replica:a6005#MainNode>:OUTPUT: 
Replica: 1 with history [] initiated
[2017-11-22 22:37:11,447] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: setting up replica 2 for new configuration.
[2017-11-22 22:37:11,447] replica.Replica<Replica:a6004#MainNode>:OUTPUT: 
Replica: 2 with history [] initiated
[2017-11-22 22:37:11,447] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: start all new replicas
[2017-11-22 22:37:11,447] replica.Replica<Replica:a6006#MainNode>:OUTPUT: 
Starting replica 0
[2017-11-22 22:37:11,447] replica.Replica<Replica:a6005#MainNode>:OUTPUT: 
Starting replica 1
[2017-11-22 22:37:11,447] replica.Replica<Replica:a6004#MainNode>:OUTPUT: 
Starting replica 2
[2017-11-22 22:37:11,447] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send check config response 'RECONFIG' to client <Client:57003#MainNode>
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received check config response: RECONFIG get new configuration
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent get_configuration to Olympus.
[2017-11-22 22:37:11,462] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send replicas and configuration information for config 1 to client <Client:57003#MainNode>
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received configuration 1 from Olympus.
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : configuration response from Olympus is validated.
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : start sending requests in new configuration 1
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : sent check config message with id 2 to Olympus.
[2017-11-22 22:37:11,462] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Olympus: send check config response 'OK' to client <Client:57003#MainNode>
[2017-11-22 22:37:11,462] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : received check config response: OK continue normally.
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 state: {'movie': 'war'}
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 state: {'movie': 'war'}
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 history: slot 2 ; request_id (0, 2) ; request  get('movie')
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 history: slot 2 ; request_id (0, 2) ; request  get('movie')
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 history: slot 3 ; request_id (0, 3) ; request  slice('movie', '5:8')
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 history: slot 3 ; request_id (0, 3) ; request  slice('movie', '5:8')
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 history: slot 4 ; request_id (0, 4) ; request  get('movie')
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 history: slot 4 ; request_id (0, 4) ; request  get('movie')
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6002#MainNode>:OUTPUT: 
Replica 0 last checkpoint slot: 2
[2017-11-22 22:37:12,893] replica.Replica<Replica:a6001#MainNode>:OUTPUT: 
Replica 1 last checkpoint slot: 2
[2017-11-22 22:37:16,472] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : actual request result: {(0, 1): 'OK', (0, 3): 'OK', (0, 0): 'OK', (0, 2): 'star wars', (0, 4): 'war'}
[2017-11-22 22:37:16,472] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : final test result: {(0, 1): 'OK', (0, 3): 'OK', (0, 0): 'OK', (0, 2): 'star wars', (0, 4): 'war'}
[2017-11-22 22:37:16,472] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 : final test state: {'movie': 'war'}
[2017-11-22 22:37:16,472] client.Client<Client:57003#MainNode>:OUTPUT: 
Client 0 terminating.
[2017-11-22 22:37:16,472] olympus.Olympus<Olympus:57002#MainNode>:OUTPUT: 
Application elapsed time: 17.916279792785645
[2017-11-22 22:37:19,472] replica.Replica<Replica:a6006#MainNode>:OUTPUT: 
Replica 0 state: {'movie': 'war'}
[2017-11-22 22:37:19,472] replica.Replica<Replica:a6005#MainNode>:OUTPUT: 
Replica 1 state: {'movie': 'war'}
[2017-11-22 22:37:19,472] replica.Replica<Replica:a6004#MainNode>:OUTPUT: 
Replica 2 state: {'movie': 'war'}
[2017-11-22 22:37:19,472] replica.Replica<Replica:a6006#MainNode>:OUTPUT: 
Replica 0 last checkpoint slot: 5
[2017-11-22 22:37:19,472] replica.Replica<Replica:a6005#MainNode>:OUTPUT: 
Replica 1 last checkpoint slot: 5
[2017-11-22 22:37:19,472] replica.Replica<Replica:a6004#MainNode>:OUTPUT: 
Replica 2 last checkpoint slot: 5
